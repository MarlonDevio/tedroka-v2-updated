{% assign main_menu_navigation_links = linklists['main-menu-navigation-links'].links %}

{% assign collection_handle = link.url | split: '/' | last %}
{% assign collection = collections[collection_handle] %}

<style>
  .expand-menu {
    left: 0;
  }

  .closed-menu {
    left: -100%;
  }

  .hamburger {
    z-index: 1000000;
    color: red;
  }

  .search-bar-menu-open {
    height: 100%;
  }

  .search-bar-menu-closed {
    height: 0%;
  }
</style>
<header class="relative px-2 py-4 laptop:py-6 bg-primary laptop:px-4">
  {% comment %} Laptop Screen {% endcomment %}

  <nav class="flex items-center justify-between mx-auto max-w-7xl">
    {% comment %} Left link container {% endcomment %}

    <div class="hidden gap-4 font-bold text-white uppercase laptop:flex left-link-container">
      <ul class="flex items-center gap-4 list-none">
        {% for link in main_menu_navigation_links %}
          <li class="text-white uppercase">
            <a
              href="{{ link.url }}"
              class="flex p-2 transition-all duration-300 ease-in-out rounded-md hover:bg-white hover:text-primary hover:cursor-pointer"
            >
              {{ link.title }}
              {% if link.type == 'collection_link' %}
                {% render 'chevron-svg' %}
              {% endif %}
            </a>
          </li>
        {% endfor %}
      </ul>
      {% render 'logo' %}
    </div>

    {% comment %} Mobile menu {% endcomment %}
    <div class="flex flex-col laptop:hidden">
      {% render 'hamburger-menu', menu_class: 'hamburger relative z-50' %}
      <ul class="absolute z-20 flex-col flex min-h-[100vh] min-w-[50vw] navigation-container-mobile bg-white gap-2 px-4 py-2 text-primary rounded-md transition-all duration-500 ease-in-out  closed-menu  top-0 pt-[60px]">
        {% for link in main_menu_navigation_links %}
          <li class="inline-block p-2 text-base uppercase rounded-md hover:bg-primary hover:text-white">
            <a class="flex" href="{{ link.url }}">
              {{- link.title }}
              {% if link.type == 'collection_link' %}
                {% render 'chevron-svg' %}
              {% endif %}
            </a>
          </li>
        {% endfor %}
      </ul>
    </div>

    {% comment %} Right links container {% endcomment %}
    <ul class="flex gap-2 ml-auto nav-links-container">
      <li class="flex items-center px-2 hover:cursor-pointer transition-all duration-300 ease-in-out hover:scale-[1.5]">
        <a
          class="main-menu-link flex p-1.5 text-white"
          href="{{ routes.cart_url }}"
        >
          {%- render 'cart-svg' -%}
        </a>
      </li>
      <li class="flex items-center px-2 hover:cursor-pointer transition-all duration-300 ease-in-out hover:scale-[1.5]">
        <button
          type="button"

          class="main-menu-link search-button flex p-1.5 text-white"
        >
          {%- render 'icon-search' -%}
        </button>
      </li>
      <li class="flex items-center px-2 hover:cursor-pointer transition-all duration-300 ease-in-out hover:scale-[1.5]">
        <a
          class="main-menu-link flex p-1.5 text-white"
          href="https://tedroka.nl/apps/parcelpanel"
        >
          {% render 'track-order-svg' %}
        </a>
      </li>
    </ul>
  </nav>

  <div class="absolute top-[100%] h-[0] w-full border bg-white rounded-md max-w-7xl mx-auto translate-x-[30%] z-50 search-bar-menu">
    <div class="flex items-center justify-center h-40 text-primary">
      <form action="{{ routes.search_url }}" method="get">
        <input type="text" name="q" class="w-full" placeholder="Zoeken...">
        <button type="submit">{% render 'icon-search' %}</button>
      </form>
    </div>
  </div>
  {% comment %} Searchbar {% endcomment %}
</header>
<script>
  // the check id is declared in the hamburger-menu.liquid snippet
  const hamburger = document.getElementById('check');
  const navContainerMobile = document.querySelector('.navigation-container-mobile');
  const searchBtn = document.querySelector('.search-button');
  const searchBarMenu = document.querySelector('.search-bar-menu');

  searchBtn.addEventListener('click', (e) => {
    e.preventDefault();
    searchBarMenu.classList.toggle('search-bar-menu-open');
  });

  const toggleSubMenu = (isChecked, submenuElement) => {
    if (isChecked) {
      submenuElement.classList.remove('closed-menu');
      submenuElement.classList.add('expand-menu');
    } else {
      submenuElement.classList.add('closed-menu');
      submenuElement.classList.remove('expand-menu');
    }
  };
  hamburger.addEventListener('click', () => {
    toggleSubMenu(hamburger.checked, navContainerMobile);
    console.log(hamburger);
    console.log(hamburger.checked);
  });
</script>
